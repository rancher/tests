---
 name: Run Test Suite
 description: "Runs a specific test suite based on input"
 inputs:
   suite:
     description: "The test suite to run"
     required: true
 runs:
   using: composite
   steps:
     - name: Run Selected Test Suite
       id: run-tests
       run: |
         set +e
         case "${{ inputs.suite }}" in
           rancher-server-one)
             gotestsum --format standard-verbose --packages=github.com/rancher/tests/validation/certificates/rke2k3s \
               --junitfile results.xml --jsonfile results_cert.json -- -timeout=3h -tags=recurring -v;
             cert_exit=$?;
             echo "cert_exit=$cert_exit" >> $GITHUB_ENV;
             cp results_cert.json results.json
             ./validation/pipeline/scripts/build_qase_reporter_v2.sh;
             ./validation/reporter

             gotestsum --format standard-verbose --packages=github.com/rancher/tests/validation/deleting/rke2k3s \
               --junitfile results.xml --jsonfile results_delete.json -- -timeout=3h -tags=recurring -v;
             delete_exit=$?;
             echo "delete_exit=$delete_exit" >> $GITHUB_ENV;
             cp results_delete.json results.json
             ./validation/pipeline/scripts/build_qase_reporter_v2.sh;
             ./validation/reporter

             gotestsum --format standard-verbose --packages=github.com/rancher/tests/validation/nodescaling/rke2k3s \
               --junitfile results.xml --jsonfile results_node_scale.json -- -timeout=3h -tags=recurring -v;
             nodescaling_exit=$?;
             echo "nodescaling_exit=$nodescaling_exit" >> $GITHUB_ENV;
             cp results_node_scale.json results.json
             ./validation/pipeline/scripts/build_qase_reporter_v2.sh;
             ./validation/reporter
             ;;
           rancher-server-two)
             gotestsum --format standard-verbose --packages=github.com/rancher/tests/validation/provisioning/k3s \
               --junitfile results.xml --jsonfile results_k3s.json -- -timeout=3h -tags=recurring -v;
             k3s_exit=$?;
             echo "k3s_exit=$k3s_exit" >> $GITHUB_ENV;
             cp results_k3s.json results.json
             ./validation/pipeline/scripts/build_qase_reporter_v2.sh;
             ./validation/reporter

             gotestsum --format standard-verbose --packages=github.com/rancher/tests/validation/provisioning/rke2 \
               --junitfile results.xml --jsonfile results_rke2.json -- -timeout=3h -tags=recurring -v;
             rke2_exit=$?;
             echo "rke2_exit=$rke2_exit" >> $GITHUB_ENV;
             cp results_rke2.json results.json
             ./validation/pipeline/scripts/build_qase_reporter_v2.sh;
             ./validation/reporter

             gotestsum --format standard-verbose --packages=github.com/rancher/tests/validation/snapshot/rke2k3s \
               --junitfile results.xml --jsonfile results_snapshot.json -- -timeout=3h -tags=recurring -v;
             snapshot_exit=$?;
             echo "snapshot_exit=$snapshot_exit" >> $GITHUB_ENV;
             cp results_snapshot.json results.json
             ./validation/pipeline/scripts/build_qase_reporter_v2.sh;
             ./validation/reporter

             gotestsum --format standard-verbose --packages=github.com/rancher/tests/validation/upgrade/rke2k3s \
               --junitfile results.xml --jsonfile results_upgrade.json -- -timeout=3h -tags=recurring -v;
             upgrade_exit=$?;
             echo "upgrade_exit=$upgrade_exit" >> $GITHUB_ENV;
             cp results_upgrade.json results.json
             ./validation/pipeline/scripts/build_qase_reporter_v2.sh;
             ./validation/reporter
             ;;
         esac
       shell: bash
       continue-on-error: true

     - name: Show failed tests
       run: |
         declare -A suites=(
           [cert_exit]="Cert Rotation:results_cert.json"
           [delete_exit]="Delete Cluster:results_delete.json"
           [replace_exit]="Node Scaling:results_node_scale.json"
           [k3s_exit]="K3S:results_k3s.json"
           [rke2_exit]="RKE2:results_rke2.json"
           [snapshot_exit]="Snapshot Restore:results_snapshot.json"
           [upgrade_exit]="Kubernetes Upgrade:results_upgrade.json"
         )

         failed=0
         for exit_code in "${!suites[@]}"; do
          IFS=: read suite_name results_file <<< "${suites[$exit_code]}"
          exit_val="${!exit_code}"
           
          if [ "$exit_val" != "" ] && [ "$exit_val" -ne 0 ]; then
            echo "Failed $suite_name tests:"
            jq -r 'select(.Action=="fail" and .Test != null) | "- " + .Test' "$results_file"
            failed=1
          fi
         done

         if [ "$failed" -eq 1 ]; then
          exit 1
         fi
       shell: bash