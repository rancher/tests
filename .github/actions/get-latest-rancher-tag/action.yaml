---
name: Get latest Rancher tag
description: Gets the latest Rancher tag for the specified release lines
inputs:
  release_lines:
    description: "List Rancher release lines"
    required: true
  prime_artifacts_path:
    description: "Path to prime artifacts"
    required: true
outputs:
  latest_tag_v212:
    description: "Latest tag for v2.12"
    value: ${{ steps.set-outputs.outputs.latest_tag_v212 }}
  latest_tag_v211:
    description: "Latest tag for v2.11"
    value: ${{ steps.set-outputs.outputs.latest_tag_v211 }}
  latest_tag_v210:
    description: "Latest tag for v2.10"
    value: ${{ steps.set-outputs.outputs.latest_tag_v210 }}
  latest_tag_v29:
    description: "Latest tag for v2.9"
    value: ${{ steps.set-outputs.outputs.latest_tag_v29 }}
runs:
  using: composite
  steps:
    - id: get-tags
      run: |
        RELEASE_LINES="${{ inputs.release_lines }}"
        TAGS=$(curl -s https://api.github.com/repos/rancher/rancher/releases | jq -r '.[].tag_name')

        for RELEASE_LINE in $RELEASE_LINES; do
          LATEST_VERSION=$(curl -s https://api.github.com/repos/rancher/rancher/releases | jq -r '.[].tag_name' | grep -E "^$RELEASE_LINE" | head -n 1)

          echo "Latest tag for $RELEASE_LINE: $LATEST_VERSION"

          if [[ "$RELEASE_LINE" == "v2.12" ]]; then
            RELEASE_JSON=$(curl -s "https://api.github.com/repos/rancher/rancher/releases/tags/$LATEST_VERSION")
            ASSET_COUNT=$(echo "$RELEASE_JSON" | jq '.assets | length')

            echo "Asset count for $LATEST_VERSION: $ASSET_COUNT"

            if [ "$ASSET_COUNT" -lt 17 ]; then
              echo "Asset count: $ASSET_COUNT. Expected at least 17 assets..."
              LATEST_VERSION=""
            fi
          else
            RELEASE_JSON=$(curl -s ${{ inputs.prime_artifacts_path }}/$RELEASE_LINE/rancher-images.txt)

            if [[ $? -ne 0 ]]; then
              echo "Unable to reach: ${{ inputs.prime_artifacts_path }}/$RELEASE_LINE/rancher-images.txt"
              LATEST_VERSION=""
            fi
          fi

          SUFFIX=$(echo "$RELEASE_LINE" | tr -d '.')
          eval "LATEST_TAG_${SUFFIX}=$LATEST_VERSION"
          echo "LATEST_TAG_${SUFFIX}=$LATEST_VERSION" >> $GITHUB_ENV
        done
      shell: bash
    - id: set-outputs
      run: |
        echo "latest_tag_v212=$LATEST_TAG_v212" >> $GITHUB_OUTPUT
        echo "latest_tag_v211=$LATEST_TAG_v211" >> $GITHUB_OUTPUT
        echo "latest_tag_v210=$LATEST_TAG_v210" >> $GITHUB_OUTPUT
        echo "latest_tag_v29=$LATEST_TAG_v29" >> $GITHUB_OUTPUT
      shell: bash